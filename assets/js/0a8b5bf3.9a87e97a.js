"use strict";(self.webpackChunkorbit_website=self.webpackChunkorbit_website||[]).push([[6678],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return k}});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=a.createContext({}),s=function(e){var t=a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=s(r),k=n,u=m["".concat(p,".").concat(k)]||m[k]||d[k]||i;return r?a.createElement(u,o(o({ref:t},c),{},{components:r})):a.createElement(u,o({ref:t},c))}));function k(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,o=new Array(i);o[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:n,o[1]=l;for(var s=2;s<i;s++)o[s]=r[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},7425:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return l},contentTitle:function(){return p},metadata:function(){return s},toc:function(){return c},default:function(){return m}});var a=r(3117),n=r(102),i=(r(7294),r(3905)),o=["components"],l={id:"AsyncOperationProcessor",title:"Class: AsyncOperationProcessor",sidebar_label:"AsyncOperationProcessor",sidebar_position:0,custom_edit_url:null},p=void 0,s={unversionedId:"api/record-cache/classes/AsyncOperationProcessor",id:"api/record-cache/classes/AsyncOperationProcessor",title:"Class: AsyncOperationProcessor",description:"Operation processors are used to identify operations that should be performed",source:"@site/docs/api/record-cache/classes/AsyncOperationProcessor.md",sourceDirName:"api/record-cache/classes",slug:"/api/record-cache/classes/AsyncOperationProcessor",permalink:"/docs/api/record-cache/classes/AsyncOperationProcessor",editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"AsyncOperationProcessor",title:"Class: AsyncOperationProcessor",sidebar_label:"AsyncOperationProcessor",sidebar_position:0,custom_edit_url:null},sidebar:"api",previous:{title:"AsyncLiveQueryUpdate",permalink:"/docs/api/record-cache/classes/AsyncLiveQueryUpdate"},next:{title:"AsyncRecordCache",permalink:"/docs/api/record-cache/classes/AsyncRecordCache"}},c=[{value:"Hierarchy",id:"hierarchy",children:[],level:2},{value:"Constructors",id:"constructors",children:[{value:"constructor",id:"constructor",children:[{value:"Parameters",id:"parameters",children:[],level:4},{value:"Defined in",id:"defined-in",children:[],level:4}],level:3}],level:2},{value:"Accessors",id:"accessors",children:[{value:"accessor",id:"accessor",children:[{value:"Returns",id:"returns",children:[],level:4},{value:"Defined in",id:"defined-in-1",children:[],level:4}],level:3}],level:2},{value:"Methods",id:"methods",children:[{value:"after",id:"after",children:[{value:"Parameters",id:"parameters-1",children:[],level:4},{value:"Returns",id:"returns-1",children:[],level:4},{value:"Defined in",id:"defined-in-2",children:[],level:4}],level:3},{value:"before",id:"before",children:[{value:"Parameters",id:"parameters-2",children:[],level:4},{value:"Returns",id:"returns-2",children:[],level:4},{value:"Defined in",id:"defined-in-3",children:[],level:4}],level:3},{value:"finally",id:"finally",children:[{value:"Parameters",id:"parameters-3",children:[],level:4},{value:"Returns",id:"returns-3",children:[],level:4},{value:"Defined in",id:"defined-in-4",children:[],level:4}],level:3},{value:"immediate",id:"immediate",children:[{value:"Parameters",id:"parameters-4",children:[],level:4},{value:"Returns",id:"returns-4",children:[],level:4},{value:"Defined in",id:"defined-in-5",children:[],level:4}],level:3},{value:"reset",id:"reset",children:[{value:"Parameters",id:"parameters-5",children:[],level:4},{value:"Returns",id:"returns-5",children:[],level:4},{value:"Defined in",id:"defined-in-6",children:[],level:4}],level:3},{value:"upgrade",id:"upgrade",children:[{value:"Returns",id:"returns-6",children:[],level:4},{value:"Defined in",id:"defined-in-7",children:[],level:4}],level:3},{value:"validate",id:"validate",children:[{value:"Parameters",id:"parameters-6",children:[],level:4},{value:"Returns",id:"returns-7",children:[],level:4},{value:"Defined in",id:"defined-in-8",children:[],level:4}],level:3}],level:2}],d={toc:c};function m(e){var t=e.components,r=(0,n.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Operation processors are used to identify operations that should be performed\ntogether to ensure that a ",(0,i.kt)("inlineCode",{parentName:"p"},"Cache")," or other container of data remains\nconsistent and correct."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"OperationProcessor")," is an abstract base class to be extended by specific\noperation processors."),(0,i.kt)("h2",{id:"hierarchy"},"Hierarchy"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"AsyncOperationProcessor"))),(0,i.kt)("p",{parentName:"li"},"\u21b3 ",(0,i.kt)("a",{parentName:"p",href:"AsyncCacheIntegrityProcessor"},(0,i.kt)("inlineCode",{parentName:"a"},"AsyncCacheIntegrityProcessor"))),(0,i.kt)("p",{parentName:"li"},"\u21b3 ",(0,i.kt)("a",{parentName:"p",href:"AsyncSchemaConsistencyProcessor"},(0,i.kt)("inlineCode",{parentName:"a"},"AsyncSchemaConsistencyProcessor"))),(0,i.kt)("p",{parentName:"li"},"\u21b3 ",(0,i.kt)("a",{parentName:"p",href:"AsyncSchemaValidationProcessor"},(0,i.kt)("inlineCode",{parentName:"a"},"AsyncSchemaValidationProcessor"))))),(0,i.kt)("h2",{id:"constructors"},"Constructors"),(0,i.kt)("h3",{id:"constructor"},"constructor"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"new AsyncOperationProcessor"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"accessor"),")"),(0,i.kt)("h4",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"accessor")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../interfaces/AsyncRecordAccessor"},(0,i.kt)("inlineCode",{parentName:"a"},"AsyncRecordAccessor")))))),(0,i.kt)("h4",{id:"defined-in"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/orbitjs/orbit/blob/ea8f97c9/packages/@orbit/record-cache/src/async-operation-processor.ts#L27"},"record-cache/src/async-operation-processor.ts:27")),(0,i.kt)("h2",{id:"accessors"},"Accessors"),(0,i.kt)("h3",{id:"accessor"},"accessor"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"get")," ",(0,i.kt)("strong",{parentName:"p"},"accessor"),"(): ",(0,i.kt)("a",{parentName:"p",href:"../interfaces/AsyncRecordAccessor"},(0,i.kt)("inlineCode",{parentName:"a"},"AsyncRecordAccessor"))),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"AsyncRecordAccessor")," that is monitored."),(0,i.kt)("h4",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"../interfaces/AsyncRecordAccessor"},(0,i.kt)("inlineCode",{parentName:"a"},"AsyncRecordAccessor"))),(0,i.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/orbitjs/orbit/blob/ea8f97c9/packages/@orbit/record-cache/src/async-operation-processor.ts#L23"},"record-cache/src/async-operation-processor.ts:23")),(0,i.kt)("h2",{id:"methods"},"Methods"),(0,i.kt)("h3",{id:"after"},"after"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"after"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"operation"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"RecordOperation"),"[]",">"),(0,i.kt)("p",null,"Called before an ",(0,i.kt)("inlineCode",{parentName:"p"},"operation")," has been applied."),(0,i.kt)("p",null,"Returns an array of operations to be applied ",(0,i.kt)("strong",{parentName:"p"},"AFTER")," the ",(0,i.kt)("inlineCode",{parentName:"p"},"operation"),"\nhas been applied successfully."),(0,i.kt)("h4",{id:"parameters-1"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"operation")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"RecordOperation"))))),(0,i.kt)("h4",{id:"returns-1"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"RecordOperation"),"[]",">"),(0,i.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/orbitjs/orbit/blob/ea8f97c9/packages/@orbit/record-cache/src/async-operation-processor.ts#L70"},"record-cache/src/async-operation-processor.ts:70")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"before"},"before"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"before"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"operation"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"RecordOperation"),"[]",">"),(0,i.kt)("p",null,"Called before an ",(0,i.kt)("inlineCode",{parentName:"p"},"operation")," has been applied."),(0,i.kt)("p",null,"Returns an array of operations to be applied ",(0,i.kt)("strong",{parentName:"p"},"BEFORE")," the ",(0,i.kt)("inlineCode",{parentName:"p"},"operation"),"\nitself is applied."),(0,i.kt)("h4",{id:"parameters-2"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"operation")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"RecordOperation"))))),(0,i.kt)("h4",{id:"returns-2"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"RecordOperation"),"[]",">"),(0,i.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/orbitjs/orbit/blob/ea8f97c9/packages/@orbit/record-cache/src/async-operation-processor.ts#L60"},"record-cache/src/async-operation-processor.ts:60")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"finally"},"finally"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"finally"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"operation"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"RecordOperation"),"[]",">"),(0,i.kt)("p",null,"Called after an ",(0,i.kt)("inlineCode",{parentName:"p"},"operation")," ",(0,i.kt)("em",{parentName:"p"},"and")," any related operations have been applied."),(0,i.kt)("p",null,"Returns an array of operations to be applied ",(0,i.kt)("strong",{parentName:"p"},"AFTER")," the ",(0,i.kt)("inlineCode",{parentName:"p"},"operation"),"\nitself and any operations returned from the ",(0,i.kt)("inlineCode",{parentName:"p"},"after")," hook have been applied."),(0,i.kt)("h4",{id:"parameters-3"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"operation")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"RecordOperation"))))),(0,i.kt)("h4",{id:"returns-3"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"RecordOperation"),"[]",">"),(0,i.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/orbitjs/orbit/blob/ea8f97c9/packages/@orbit/record-cache/src/async-operation-processor.ts#L91"},"record-cache/src/async-operation-processor.ts:91")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"immediate"},"immediate"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"immediate"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"operation"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("p",null,"Called immediately after an ",(0,i.kt)("inlineCode",{parentName:"p"},"operation")," has been applied and before the\n",(0,i.kt)("inlineCode",{parentName:"p"},"patch")," event has been emitted (i.e. before any listeners have been\nnotified that the operation was applied)."),(0,i.kt)("p",null,"No operations may be returned."),(0,i.kt)("h4",{id:"parameters-4"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"operation")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"RecordOperation"))))),(0,i.kt)("h4",{id:"returns-4"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/orbitjs/orbit/blob/ea8f97c9/packages/@orbit/record-cache/src/async-operation-processor.ts#L81"},"record-cache/src/async-operation-processor.ts:81")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"reset"},"reset"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"reset"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"base?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("p",null,"Called when all the data in a cache has been reset."),(0,i.kt)("p",null,"If ",(0,i.kt)("inlineCode",{parentName:"p"},"base")," is included, the cache is being reset to match a base cache."),(0,i.kt)("h4",{id:"parameters-5"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"base?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../interfaces/AsyncRecordAccessor"},(0,i.kt)("inlineCode",{parentName:"a"},"AsyncRecordAccessor")))))),(0,i.kt)("h4",{id:"returns-5"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/orbitjs/orbit/blob/ea8f97c9/packages/@orbit/record-cache/src/async-operation-processor.ts#L36"},"record-cache/src/async-operation-processor.ts:36")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"upgrade"},"upgrade"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"upgrade"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("p",null,"Allow the processor to perform an upgrade as part of a cache upgrade."),(0,i.kt)("h4",{id:"returns-6"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/orbitjs/orbit/blob/ea8f97c9/packages/@orbit/record-cache/src/async-operation-processor.ts#L43"},"record-cache/src/async-operation-processor.ts:43")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"validate"},"validate"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"validate"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"operation"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("p",null,"Validates an operation before processing it."),(0,i.kt)("h4",{id:"parameters-6"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"operation")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"RecordOperation"))))),(0,i.kt)("h4",{id:"returns-7"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/orbitjs/orbit/blob/ea8f97c9/packages/@orbit/record-cache/src/async-operation-processor.ts#L50"},"record-cache/src/async-operation-processor.ts:50")))}m.isMDXComponent=!0}}]);