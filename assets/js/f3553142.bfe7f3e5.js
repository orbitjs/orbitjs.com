"use strict";(self.webpackChunkorbit_website=self.webpackChunkorbit_website||[]).push([[904],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return u}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,p=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),h=s(n),u=i,k=h["".concat(p,".").concat(u)]||h[u]||c[u]||a;return n?r.createElement(k,o(o({ref:t},d),{},{components:n})):r.createElement(k,o({ref:t},d))}));function u(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=h;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var s=2;s<a;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},3245:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return p},metadata:function(){return s},toc:function(){return d},default:function(){return h}});var r=n(3117),i=n(102),a=(n(7294),n(3905)),o=["components"],l={id:"RequestStrategyOptions",title:"Interface: RequestStrategyOptions",sidebar_label:"RequestStrategyOptions",sidebar_position:0,custom_edit_url:null},p=void 0,s={unversionedId:"api/coordinator/interfaces/RequestStrategyOptions",id:"api/coordinator/interfaces/RequestStrategyOptions",title:"Interface: RequestStrategyOptions",description:"Hierarchy",source:"@site/docs/api/coordinator/interfaces/RequestStrategyOptions.md",sourceDirName:"api/coordinator/interfaces",slug:"/api/coordinator/interfaces/RequestStrategyOptions",permalink:"/docs/api/coordinator/interfaces/RequestStrategyOptions",editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"RequestStrategyOptions",title:"Interface: RequestStrategyOptions",sidebar_label:"RequestStrategyOptions",sidebar_position:0,custom_edit_url:null},sidebar:"api",previous:{title:"EventLoggingStrategyOptions",permalink:"/docs/api/coordinator/interfaces/EventLoggingStrategyOptions"},next:{title:"StrategyOptions",permalink:"/docs/api/coordinator/interfaces/StrategyOptions"}},d=[{value:"Hierarchy",id:"hierarchy",children:[],level:2},{value:"Properties",id:"properties",children:[{value:"action",id:"action",children:[{value:"Inherited from",id:"inherited-from",children:[],level:4},{value:"Defined in",id:"defined-in",children:[],level:4}],level:3},{value:"blocking",id:"blocking",children:[{value:"Inherited from",id:"inherited-from-1",children:[],level:4},{value:"Defined in",id:"defined-in-1",children:[],level:4}],level:3},{value:"logLevel",id:"loglevel",children:[{value:"Inherited from",id:"inherited-from-2",children:[],level:4},{value:"Defined in",id:"defined-in-2",children:[],level:4}],level:3},{value:"logPrefix",id:"logprefix",children:[{value:"Inherited from",id:"inherited-from-3",children:[],level:4},{value:"Defined in",id:"defined-in-3",children:[],level:4}],level:3},{value:"name",id:"name",children:[{value:"Inherited from",id:"inherited-from-4",children:[],level:4},{value:"Defined in",id:"defined-in-4",children:[],level:4}],level:3},{value:"on",id:"on",children:[{value:"Inherited from",id:"inherited-from-5",children:[],level:4},{value:"Defined in",id:"defined-in-5",children:[],level:4}],level:3},{value:"passHints",id:"passhints",children:[{value:"Defined in",id:"defined-in-6",children:[],level:4}],level:3},{value:"source",id:"source",children:[{value:"Inherited from",id:"inherited-from-6",children:[],level:4},{value:"Defined in",id:"defined-in-7",children:[],level:4}],level:3},{value:"sources",id:"sources",children:[{value:"Inherited from",id:"inherited-from-7",children:[],level:4},{value:"Defined in",id:"defined-in-8",children:[],level:4}],level:3},{value:"target",id:"target",children:[{value:"Inherited from",id:"inherited-from-8",children:[],level:4},{value:"Defined in",id:"defined-in-9",children:[],level:4}],level:3}],level:2},{value:"Methods",id:"methods",children:[{value:"catch",id:"catch",children:[{value:"Parameters",id:"parameters",children:[],level:4},{value:"Returns",id:"returns",children:[],level:4},{value:"Inherited from",id:"inherited-from-9",children:[],level:4},{value:"Defined in",id:"defined-in-10",children:[],level:4}],level:3},{value:"filter",id:"filter",children:[{value:"Parameters",id:"parameters-1",children:[],level:4},{value:"Returns",id:"returns-1",children:[],level:4},{value:"Inherited from",id:"inherited-from-10",children:[],level:4},{value:"Defined in",id:"defined-in-11",children:[],level:4}],level:3}],level:2}],c={toc:d};function h(e){var t=e.components,n=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"hierarchy"},"Hierarchy"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("a",{parentName:"p",href:"ConnectionStrategyOptions"},(0,a.kt)("inlineCode",{parentName:"a"},"ConnectionStrategyOptions"))),(0,a.kt)("p",{parentName:"li"},"\u21b3 ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"RequestStrategyOptions"))))),(0,a.kt)("h2",{id:"properties"},"Properties"),(0,a.kt)("h3",{id:"action"},"action"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"action"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"string")," ","|"," (...",(0,a.kt)("inlineCode",{parentName:"p"},"args"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"unknown"),"[]) => ",(0,a.kt)("inlineCode",{parentName:"p"},"unknown")),(0,a.kt)("p",null,"The action to perform on the target."),(0,a.kt)("p",null,"Can be specified as a string (e.g. ",(0,a.kt)("inlineCode",{parentName:"p"},"pull"),") or a function which will be\ninvoked in the context of this strategy (and thus will have access to\nboth ",(0,a.kt)("inlineCode",{parentName:"p"},"this.source")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"this.target"),")."),(0,a.kt)("h4",{id:"inherited-from"},"Inherited from"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"ConnectionStrategyOptions"},"ConnectionStrategyOptions"),".",(0,a.kt)("a",{parentName:"p",href:"ConnectionStrategyOptions#action"},"action")),(0,a.kt)("h4",{id:"defined-in"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/orbitjs/orbit/blob/fd40512e/packages/@orbit/coordinator/src/strategies/connection-strategy.ts#L31"},"strategies/connection-strategy.ts:31")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"blocking"},"blocking"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,a.kt)("strong",{parentName:"p"},"blocking"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"boolean")," ","|"," (...",(0,a.kt)("inlineCode",{parentName:"p"},"args"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"unknown"),"[]) => ",(0,a.kt)("inlineCode",{parentName:"p"},"boolean")),(0,a.kt)("p",null,"Should resolution of ",(0,a.kt)("inlineCode",{parentName:"p"},"action")," on the the target block the completion\nof the source's event?"),(0,a.kt)("p",null,"By default, ",(0,a.kt)("inlineCode",{parentName:"p"},"blocking")," is false."),(0,a.kt)("h4",{id:"inherited-from-1"},"Inherited from"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"ConnectionStrategyOptions"},"ConnectionStrategyOptions"),".",(0,a.kt)("a",{parentName:"p",href:"ConnectionStrategyOptions#blocking"},"blocking")),(0,a.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/orbitjs/orbit/blob/fd40512e/packages/@orbit/coordinator/src/strategies/connection-strategy.ts#L52"},"strategies/connection-strategy.ts:52")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"loglevel"},"logLevel"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,a.kt)("strong",{parentName:"p"},"logLevel"),": ",(0,a.kt)("a",{parentName:"p",href:"../enums/LogLevel"},(0,a.kt)("inlineCode",{parentName:"a"},"LogLevel"))),(0,a.kt)("p",null,"A specific log level for this strategy."),(0,a.kt)("p",null,"Overrides the log level used when activating the coordinator."),(0,a.kt)("h4",{id:"inherited-from-2"},"Inherited from"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"ConnectionStrategyOptions"},"ConnectionStrategyOptions"),".",(0,a.kt)("a",{parentName:"p",href:"ConnectionStrategyOptions#loglevel"},"logLevel")),(0,a.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/orbitjs/orbit/blob/fd40512e/packages/@orbit/coordinator/src/strategy.ts#L33"},"strategy.ts:33")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"logprefix"},"logPrefix"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,a.kt)("strong",{parentName:"p"},"logPrefix"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"string")),(0,a.kt)("p",null,"The prefix to use for logging from this strategy."),(0,a.kt)("p",null,"Defaults to ",(0,a.kt)("inlineCode",{parentName:"p"},"[${name}]"),"."),(0,a.kt)("h4",{id:"inherited-from-3"},"Inherited from"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"ConnectionStrategyOptions"},"ConnectionStrategyOptions"),".",(0,a.kt)("a",{parentName:"p",href:"ConnectionStrategyOptions#logprefix"},"logPrefix")),(0,a.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/orbitjs/orbit/blob/fd40512e/packages/@orbit/coordinator/src/strategy.ts#L26"},"strategy.ts:26")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"name"},"name"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,a.kt)("strong",{parentName:"p"},"name"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"string")),(0,a.kt)("p",null,"Name of strategy."),(0,a.kt)("p",null,"Used to uniquely identify this strategy in a coordinator's collection."),(0,a.kt)("h4",{id:"inherited-from-4"},"Inherited from"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"ConnectionStrategyOptions"},"ConnectionStrategyOptions"),".",(0,a.kt)("a",{parentName:"p",href:"ConnectionStrategyOptions#name"},"name")),(0,a.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/orbitjs/orbit/blob/fd40512e/packages/@orbit/coordinator/src/strategy.ts#L13"},"strategy.ts:13")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"on"},"on"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"on"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"string")),(0,a.kt)("p",null,"The name of the event to observe."),(0,a.kt)("h4",{id:"inherited-from-5"},"Inherited from"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"ConnectionStrategyOptions"},"ConnectionStrategyOptions"),".",(0,a.kt)("a",{parentName:"p",href:"ConnectionStrategyOptions#on"},"on")),(0,a.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/orbitjs/orbit/blob/fd40512e/packages/@orbit/coordinator/src/strategies/connection-strategy.ts#L17"},"strategies/connection-strategy.ts:17")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"passhints"},"passHints"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,a.kt)("strong",{parentName:"p"},"passHints"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"boolean")),(0,a.kt)("p",null,"Should results returned from calling ",(0,a.kt)("inlineCode",{parentName:"p"},"action")," on the ",(0,a.kt)("inlineCode",{parentName:"p"},"target")," source be\npassed as hint data back to the ",(0,a.kt)("inlineCode",{parentName:"p"},"source"),"?"),(0,a.kt)("p",null,"This can allow hints to inform the processing of subsequent actions on the\nsource. For instance, a ",(0,a.kt)("inlineCode",{parentName:"p"},"beforeQuery")," event might invoke ",(0,a.kt)("inlineCode",{parentName:"p"},"query")," on a\ntarget, and those results could inform how the originating source performs\n",(0,a.kt)("inlineCode",{parentName:"p"},"_query"),". This might allow a target source's sorting and filtering of\nresults to affect how the originating source processes the query."),(0,a.kt)("p",null,"This setting is only effective for ",(0,a.kt)("inlineCode",{parentName:"p"},"blocking")," strategies, since only in\nthose scenarios is processing delayed."),(0,a.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/orbitjs/orbit/blob/fd40512e/packages/@orbit/coordinator/src/strategies/request-strategy.ts#L29"},"strategies/request-strategy.ts:29")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"source"},"source"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"source"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"string")),(0,a.kt)("p",null,"The name of the source to be observed."),(0,a.kt)("h4",{id:"inherited-from-6"},"Inherited from"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"ConnectionStrategyOptions"},"ConnectionStrategyOptions"),".",(0,a.kt)("a",{parentName:"p",href:"ConnectionStrategyOptions#source"},"source")),(0,a.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/orbitjs/orbit/blob/fd40512e/packages/@orbit/coordinator/src/strategies/connection-strategy.ts#L12"},"strategies/connection-strategy.ts:12")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"sources"},"sources"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,a.kt)("strong",{parentName:"p"},"sources"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"string"),"[]"),(0,a.kt)("p",null,"The names of sources to include in this strategy. Leave undefined\nto include all sources registered with a coordinator."),(0,a.kt)("h4",{id:"inherited-from-7"},"Inherited from"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"ConnectionStrategyOptions"},"ConnectionStrategyOptions"),".",(0,a.kt)("a",{parentName:"p",href:"ConnectionStrategyOptions#sources"},"sources")),(0,a.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/orbitjs/orbit/blob/fd40512e/packages/@orbit/coordinator/src/strategy.ts#L19"},"strategy.ts:19")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"target"},"target"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,a.kt)("strong",{parentName:"p"},"target"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"string")),(0,a.kt)("p",null,"The name of the source which will be acted upon."),(0,a.kt)("h4",{id:"inherited-from-8"},"Inherited from"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"ConnectionStrategyOptions"},"ConnectionStrategyOptions"),".",(0,a.kt)("a",{parentName:"p",href:"ConnectionStrategyOptions#target"},"target")),(0,a.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/orbitjs/orbit/blob/fd40512e/packages/@orbit/coordinator/src/strategies/connection-strategy.ts#L22"},"strategies/connection-strategy.ts:22")),(0,a.kt)("h2",{id:"methods"},"Methods"),(0,a.kt)("h3",{id:"catch"},"catch"),(0,a.kt)("p",null,"\u25b8 ",(0,a.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,a.kt)("strong",{parentName:"p"},"catch"),"(",(0,a.kt)("inlineCode",{parentName:"p"},"error"),", ...",(0,a.kt)("inlineCode",{parentName:"p"},"args"),"): ",(0,a.kt)("inlineCode",{parentName:"p"},"void")),(0,a.kt)("p",null,"A handler for any errors thrown as a result of performing the action."),(0,a.kt)("h4",{id:"parameters"},"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"error")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"Error"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"...args")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"unknown"),"[]")))),(0,a.kt)("h4",{id:"returns"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"void")),(0,a.kt)("h4",{id:"inherited-from-9"},"Inherited from"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"ConnectionStrategyOptions"},"ConnectionStrategyOptions"),".",(0,a.kt)("a",{parentName:"p",href:"ConnectionStrategyOptions#catch"},"catch")),(0,a.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/orbitjs/orbit/blob/fd40512e/packages/@orbit/coordinator/src/strategies/connection-strategy.ts#L36"},"strategies/connection-strategy.ts:36")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"filter"},"filter"),(0,a.kt)("p",null,"\u25b8 ",(0,a.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,a.kt)("strong",{parentName:"p"},"filter"),"(...",(0,a.kt)("inlineCode",{parentName:"p"},"args"),"): ",(0,a.kt)("inlineCode",{parentName:"p"},"boolean")),(0,a.kt)("p",null,"A filter function that returns ",(0,a.kt)("inlineCode",{parentName:"p"},"true")," if the ",(0,a.kt)("inlineCode",{parentName:"p"},"action")," should be performed."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"filter")," will be invoked in the context of this strategy (and thus will\nhave access to both ",(0,a.kt)("inlineCode",{parentName:"p"},"this.source")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"this.target"),")."),(0,a.kt)("h4",{id:"parameters-1"},"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"...args")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"unknown"),"[]")))),(0,a.kt)("h4",{id:"returns-1"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"boolean")),(0,a.kt)("h4",{id:"inherited-from-10"},"Inherited from"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"ConnectionStrategyOptions"},"ConnectionStrategyOptions"),".",(0,a.kt)("a",{parentName:"p",href:"ConnectionStrategyOptions#filter"},"filter")),(0,a.kt)("h4",{id:"defined-in-11"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/orbitjs/orbit/blob/fd40512e/packages/@orbit/coordinator/src/strategies/connection-strategy.ts#L44"},"strategies/connection-strategy.ts:44")))}h.isMDXComponent=!0}}]);