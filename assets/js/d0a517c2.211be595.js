"use strict";(self.webpackChunkorbit_website=self.webpackChunkorbit_website||[]).push([[9755],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return h}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(r),h=a,k=m["".concat(s,".").concat(h)]||m[h]||d[h]||i;return r?n.createElement(k,o(o({ref:t},c),{},{components:r})):n.createElement(k,o({ref:t},c))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},5391:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return c},default:function(){return m}});var n=r(3117),a=r(102),i=(r(7294),r(3905)),o=["components"],l={id:"AsyncCacheIntegrityProcessor",title:"Class: AsyncCacheIntegrityProcessor",sidebar_label:"AsyncCacheIntegrityProcessor",sidebar_position:0,custom_edit_url:null},s=void 0,p={unversionedId:"api/record-cache/classes/AsyncCacheIntegrityProcessor",id:"api/record-cache/classes/AsyncCacheIntegrityProcessor",title:"Class: AsyncCacheIntegrityProcessor",description:"An operation processor that ensures that a cache's data is consistent and",source:"@site/docs/api/record-cache/classes/AsyncCacheIntegrityProcessor.md",sourceDirName:"api/record-cache/classes",slug:"/api/record-cache/classes/AsyncCacheIntegrityProcessor",permalink:"/docs/api/record-cache/classes/AsyncCacheIntegrityProcessor",editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"AsyncCacheIntegrityProcessor",title:"Class: AsyncCacheIntegrityProcessor",sidebar_label:"AsyncCacheIntegrityProcessor",sidebar_position:0,custom_edit_url:null},sidebar:"api",previous:{title:"Exports",permalink:"/docs/api/record-cache/modules"},next:{title:"AsyncLiveQuery",permalink:"/docs/api/record-cache/classes/AsyncLiveQuery"}},c=[{value:"Hierarchy",id:"hierarchy",children:[],level:2},{value:"Constructors",id:"constructors",children:[{value:"constructor",id:"constructor",children:[{value:"Parameters",id:"parameters",children:[],level:4},{value:"Inherited from",id:"inherited-from",children:[],level:4},{value:"Defined in",id:"defined-in",children:[],level:4}],level:3}],level:2},{value:"Accessors",id:"accessors",children:[{value:"accessor",id:"accessor",children:[{value:"Returns",id:"returns",children:[],level:4},{value:"Inherited from",id:"inherited-from-1",children:[],level:4},{value:"Defined in",id:"defined-in-1",children:[],level:4}],level:3}],level:2},{value:"Methods",id:"methods",children:[{value:"after",id:"after",children:[{value:"Parameters",id:"parameters-1",children:[],level:4},{value:"Returns",id:"returns-1",children:[],level:4},{value:"Overrides",id:"overrides",children:[],level:4},{value:"Defined in",id:"defined-in-2",children:[],level:4}],level:3},{value:"before",id:"before",children:[{value:"Parameters",id:"parameters-2",children:[],level:4},{value:"Returns",id:"returns-2",children:[],level:4},{value:"Inherited from",id:"inherited-from-2",children:[],level:4},{value:"Defined in",id:"defined-in-3",children:[],level:4}],level:3},{value:"finally",id:"finally",children:[{value:"Parameters",id:"parameters-3",children:[],level:4},{value:"Returns",id:"returns-3",children:[],level:4},{value:"Overrides",id:"overrides-1",children:[],level:4},{value:"Defined in",id:"defined-in-4",children:[],level:4}],level:3},{value:"immediate",id:"immediate",children:[{value:"Parameters",id:"parameters-4",children:[],level:4},{value:"Returns",id:"returns-4",children:[],level:4},{value:"Inherited from",id:"inherited-from-3",children:[],level:4},{value:"Defined in",id:"defined-in-5",children:[],level:4}],level:3},{value:"reset",id:"reset",children:[{value:"Parameters",id:"parameters-5",children:[],level:4},{value:"Returns",id:"returns-5",children:[],level:4},{value:"Inherited from",id:"inherited-from-4",children:[],level:4},{value:"Defined in",id:"defined-in-6",children:[],level:4}],level:3},{value:"upgrade",id:"upgrade",children:[{value:"Returns",id:"returns-6",children:[],level:4},{value:"Inherited from",id:"inherited-from-5",children:[],level:4},{value:"Defined in",id:"defined-in-7",children:[],level:4}],level:3},{value:"validate",id:"validate",children:[{value:"Parameters",id:"parameters-6",children:[],level:4},{value:"Returns",id:"returns-7",children:[],level:4},{value:"Inherited from",id:"inherited-from-6",children:[],level:4},{value:"Defined in",id:"defined-in-8",children:[],level:4}],level:3}],level:2}],d={toc:c};function m(e){var t=e.components,r=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"An operation processor that ensures that a cache's data is consistent and\ndoesn't contain any dead references."),(0,i.kt)("p",null,"This is achieved by maintaining a mapping of reverse relationships for each\nrecord. When a record is removed, any references to it can also be identified\nand removed."),(0,i.kt)("h2",{id:"hierarchy"},"Hierarchy"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"AsyncOperationProcessor"},(0,i.kt)("inlineCode",{parentName:"a"},"AsyncOperationProcessor"))),(0,i.kt)("p",{parentName:"li"},"\u21b3 ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"AsyncCacheIntegrityProcessor"))))),(0,i.kt)("h2",{id:"constructors"},"Constructors"),(0,i.kt)("h3",{id:"constructor"},"constructor"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"new AsyncCacheIntegrityProcessor"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"accessor"),")"),(0,i.kt)("h4",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"accessor")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../interfaces/AsyncRecordAccessor"},(0,i.kt)("inlineCode",{parentName:"a"},"AsyncRecordAccessor")))))),(0,i.kt)("h4",{id:"inherited-from"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"AsyncOperationProcessor"},"AsyncOperationProcessor"),".",(0,i.kt)("a",{parentName:"p",href:"AsyncOperationProcessor#constructor"},"constructor")),(0,i.kt)("h4",{id:"defined-in"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/orbitjs/orbit/blob/ea8f97c9/packages/@orbit/record-cache/src/async-operation-processor.ts#L27"},"record-cache/src/async-operation-processor.ts:27")),(0,i.kt)("h2",{id:"accessors"},"Accessors"),(0,i.kt)("h3",{id:"accessor"},"accessor"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"get")," ",(0,i.kt)("strong",{parentName:"p"},"accessor"),"(): ",(0,i.kt)("a",{parentName:"p",href:"../interfaces/AsyncRecordAccessor"},(0,i.kt)("inlineCode",{parentName:"a"},"AsyncRecordAccessor"))),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"AsyncRecordAccessor")," that is monitored."),(0,i.kt)("h4",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"../interfaces/AsyncRecordAccessor"},(0,i.kt)("inlineCode",{parentName:"a"},"AsyncRecordAccessor"))),(0,i.kt)("h4",{id:"inherited-from-1"},"Inherited from"),(0,i.kt)("p",null,"AsyncOperationProcessor.accessor"),(0,i.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/orbitjs/orbit/blob/ea8f97c9/packages/@orbit/record-cache/src/async-operation-processor.ts#L23"},"record-cache/src/async-operation-processor.ts:23")),(0,i.kt)("h2",{id:"methods"},"Methods"),(0,i.kt)("h3",{id:"after"},"after"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"after"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"operation"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"RecordOperation"),"[]",">"),(0,i.kt)("p",null,"Called before an ",(0,i.kt)("inlineCode",{parentName:"p"},"operation")," has been applied."),(0,i.kt)("p",null,"Returns an array of operations to be applied ",(0,i.kt)("strong",{parentName:"p"},"AFTER")," the ",(0,i.kt)("inlineCode",{parentName:"p"},"operation"),"\nhas been applied successfully."),(0,i.kt)("h4",{id:"parameters-1"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"operation")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"RecordOperation"))))),(0,i.kt)("h4",{id:"returns-1"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"RecordOperation"),"[]",">"),(0,i.kt)("h4",{id:"overrides"},"Overrides"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"AsyncOperationProcessor"},"AsyncOperationProcessor"),".",(0,i.kt)("a",{parentName:"p",href:"AsyncOperationProcessor#after"},"after")),(0,i.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/orbitjs/orbit/blob/ea8f97c9/packages/@orbit/record-cache/src/operation-processors/async-cache-integrity-processor.ts#L23"},"record-cache/src/operation-processors/async-cache-integrity-processor.ts:23")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"before"},"before"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"before"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"operation"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"RecordOperation"),"[]",">"),(0,i.kt)("p",null,"Called before an ",(0,i.kt)("inlineCode",{parentName:"p"},"operation")," has been applied."),(0,i.kt)("p",null,"Returns an array of operations to be applied ",(0,i.kt)("strong",{parentName:"p"},"BEFORE")," the ",(0,i.kt)("inlineCode",{parentName:"p"},"operation"),"\nitself is applied."),(0,i.kt)("h4",{id:"parameters-2"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"operation")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"RecordOperation"))))),(0,i.kt)("h4",{id:"returns-2"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"RecordOperation"),"[]",">"),(0,i.kt)("h4",{id:"inherited-from-2"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"AsyncOperationProcessor"},"AsyncOperationProcessor"),".",(0,i.kt)("a",{parentName:"p",href:"AsyncOperationProcessor#before"},"before")),(0,i.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/orbitjs/orbit/blob/ea8f97c9/packages/@orbit/record-cache/src/async-operation-processor.ts#L60"},"record-cache/src/async-operation-processor.ts:60")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"finally"},"finally"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"finally"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"operation"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"RecordOperation"),"[]",">"),(0,i.kt)("p",null,"Called after an ",(0,i.kt)("inlineCode",{parentName:"p"},"operation")," ",(0,i.kt)("em",{parentName:"p"},"and")," any related operations have been applied."),(0,i.kt)("p",null,"Returns an array of operations to be applied ",(0,i.kt)("strong",{parentName:"p"},"AFTER")," the ",(0,i.kt)("inlineCode",{parentName:"p"},"operation"),"\nitself and any operations returned from the ",(0,i.kt)("inlineCode",{parentName:"p"},"after")," hook have been applied."),(0,i.kt)("h4",{id:"parameters-3"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"operation")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"RecordOperation"))))),(0,i.kt)("h4",{id:"returns-3"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"RecordOperation"),"[]",">"),(0,i.kt)("h4",{id:"overrides-1"},"Overrides"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"AsyncOperationProcessor"},"AsyncOperationProcessor"),".",(0,i.kt)("a",{parentName:"p",href:"AsyncOperationProcessor#finally"},"finally")),(0,i.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/orbitjs/orbit/blob/ea8f97c9/packages/@orbit/record-cache/src/operation-processors/async-cache-integrity-processor.ts#L68"},"record-cache/src/operation-processors/async-cache-integrity-processor.ts:68")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"immediate"},"immediate"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"immediate"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"operation"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("p",null,"Called immediately after an ",(0,i.kt)("inlineCode",{parentName:"p"},"operation")," has been applied and before the\n",(0,i.kt)("inlineCode",{parentName:"p"},"patch")," event has been emitted (i.e. before any listeners have been\nnotified that the operation was applied)."),(0,i.kt)("p",null,"No operations may be returned."),(0,i.kt)("h4",{id:"parameters-4"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"operation")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"RecordOperation"))))),(0,i.kt)("h4",{id:"returns-4"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("h4",{id:"inherited-from-3"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"AsyncOperationProcessor"},"AsyncOperationProcessor"),".",(0,i.kt)("a",{parentName:"p",href:"AsyncOperationProcessor#immediate"},"immediate")),(0,i.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/orbitjs/orbit/blob/ea8f97c9/packages/@orbit/record-cache/src/async-operation-processor.ts#L81"},"record-cache/src/async-operation-processor.ts:81")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"reset"},"reset"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"reset"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"base?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("p",null,"Called when all the data in a cache has been reset."),(0,i.kt)("p",null,"If ",(0,i.kt)("inlineCode",{parentName:"p"},"base")," is included, the cache is being reset to match a base cache."),(0,i.kt)("h4",{id:"parameters-5"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"base?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../interfaces/AsyncRecordAccessor"},(0,i.kt)("inlineCode",{parentName:"a"},"AsyncRecordAccessor")))))),(0,i.kt)("h4",{id:"returns-5"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("h4",{id:"inherited-from-4"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"AsyncOperationProcessor"},"AsyncOperationProcessor"),".",(0,i.kt)("a",{parentName:"p",href:"AsyncOperationProcessor#reset"},"reset")),(0,i.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/orbitjs/orbit/blob/ea8f97c9/packages/@orbit/record-cache/src/async-operation-processor.ts#L36"},"record-cache/src/async-operation-processor.ts:36")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"upgrade"},"upgrade"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"upgrade"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("p",null,"Allow the processor to perform an upgrade as part of a cache upgrade."),(0,i.kt)("h4",{id:"returns-6"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("h4",{id:"inherited-from-5"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"AsyncOperationProcessor"},"AsyncOperationProcessor"),".",(0,i.kt)("a",{parentName:"p",href:"AsyncOperationProcessor#upgrade"},"upgrade")),(0,i.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/orbitjs/orbit/blob/ea8f97c9/packages/@orbit/record-cache/src/async-operation-processor.ts#L43"},"record-cache/src/async-operation-processor.ts:43")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"validate"},"validate"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"validate"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"operation"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("p",null,"Validates an operation before processing it."),(0,i.kt)("h4",{id:"parameters-6"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"operation")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"RecordOperation"))))),(0,i.kt)("h4",{id:"returns-7"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("h4",{id:"inherited-from-6"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"AsyncOperationProcessor"},"AsyncOperationProcessor"),".",(0,i.kt)("a",{parentName:"p",href:"AsyncOperationProcessor#validate"},"validate")),(0,i.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/orbitjs/orbit/blob/ea8f97c9/packages/@orbit/record-cache/src/async-operation-processor.ts#L50"},"record-cache/src/async-operation-processor.ts:50")))}m.isMDXComponent=!0}}]);