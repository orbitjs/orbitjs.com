(self.webpackChunkorbit_website=self.webpackChunkorbit_website||[]).push([[3575],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return d},kt:function(){return c}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},k={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),m=s(n),c=r,u=m["".concat(p,".").concat(c)]||m[c]||k[c]||i;return n?a.createElement(u,l(l({ref:t},d),{},{components:n})):a.createElement(u,l({ref:t},d))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var s=2;s<i;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1043:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return p},metadata:function(){return s},toc:function(){return d},default:function(){return m}});var a=n(2122),r=n(9756),i=(n(7294),n(3905)),l=["components"],o={id:"modules",title:"@orbit/core",sidebar_label:"Exports",sidebar_position:.5,custom_edit_url:null},p=void 0,s={unversionedId:"api/core/modules",id:"api/core/modules",isDocsHomePage:!1,title:"@orbit/core",description:"Classes",source:"@site/docs/api/core/modules.md",sourceDirName:"api/core",slug:"/api/core/modules",permalink:"/docs/next/api/core/modules",editUrl:null,version:"current",sidebarPosition:.5,frontMatter:{id:"modules",title:"@orbit/core",sidebar_label:"Exports",sidebar_position:.5,custom_edit_url:null},sidebar:"api",previous:{title:"Readme",permalink:"/docs/next/api/core"},next:{title:"Assertion",permalink:"/docs/next/api/core/classes/Assertion"}},d=[{value:"Classes",id:"classes",children:[]},{value:"Interfaces",id:"interfaces",children:[]},{value:"Type aliases",id:"type-aliases",children:[{value:"Listener",id:"listener",children:[]}]},{value:"Variables",id:"variables",children:[{value:"Orbit",id:"orbit",children:[]},{value:"default",id:"default",children:[]}]},{value:"Functions",id:"functions",children:[{value:"evented",id:"evented",children:[]},{value:"fulfillAll",id:"fulfillall",children:[]},{value:"fulfillInSeries",id:"fulfillinseries",children:[]},{value:"isEvented",id:"isevented",children:[]},{value:"settleInSeries",id:"settleinseries",children:[]}]}],k={toc:d};function m(e){var t=e.components,n=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},k,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"classes"},"Classes"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/next/api/core/classes/Assertion"},"Assertion")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/next/api/core/classes/Bucket"},"Bucket")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/next/api/core/classes/Exception"},"Exception")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/next/api/core/classes/Log"},"Log")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/next/api/core/classes/NotLoggedException"},"NotLoggedException")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/next/api/core/classes/Notifier"},"Notifier")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/next/api/core/classes/OutOfRangeException"},"OutOfRangeException")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/next/api/core/classes/TaskProcessor"},"TaskProcessor")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/next/api/core/classes/TaskQueue"},"TaskQueue"))),(0,i.kt)("h2",{id:"interfaces"},"Interfaces"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/next/api/core/interfaces/BucketSettings"},"BucketSettings")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/next/api/core/interfaces/Evented"},"Evented")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/next/api/core/interfaces/LogOptions"},"LogOptions")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/next/api/core/interfaces/OrbitGlobal"},"OrbitGlobal")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/next/api/core/interfaces/Performer"},"Performer")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/next/api/core/interfaces/Task"},"Task")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/next/api/core/interfaces/TaskQueueSettings"},"TaskQueueSettings"))),(0,i.kt)("h2",{id:"type-aliases"},"Type aliases"),(0,i.kt)("h3",{id:"listener"},"Listener"),(0,i.kt)("p",null,"\u01ac ",(0,i.kt)("strong",{parentName:"p"},"Listener"),": (...",(0,i.kt)("inlineCode",{parentName:"p"},"args"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"any"),"[]) => ",(0,i.kt)("inlineCode",{parentName:"p"},"any")),(0,i.kt)("h4",{id:"type-declaration"},"Type declaration"),(0,i.kt)("p",null,"\u25b8 (...",(0,i.kt)("inlineCode",{parentName:"p"},"args"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"any")),(0,i.kt)("h5",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"...args")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"any"),"[]")))),(0,i.kt)("h5",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"any")),(0,i.kt)("h4",{id:"defined-in"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/orbitjs/orbit/blob/9061328a/packages/@orbit/core/src/notifier.ts#L1"},"packages/@orbit/core/src/notifier.ts:1")),(0,i.kt)("h2",{id:"variables"},"Variables"),(0,i.kt)("h3",{id:"orbit"},"Orbit"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Const")," ",(0,i.kt)("strong",{parentName:"p"},"Orbit"),": ",(0,i.kt)("a",{parentName:"p",href:"/docs/next/api/core/interfaces/OrbitGlobal"},(0,i.kt)("inlineCode",{parentName:"a"},"OrbitGlobal"))),(0,i.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/orbitjs/orbit/blob/9061328a/packages/@orbit/core/src/main.ts#L30"},"packages/@orbit/core/src/main.ts:30")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"default"},"default"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Const")," ",(0,i.kt)("strong",{parentName:"p"},"default"),": ",(0,i.kt)("a",{parentName:"p",href:"/docs/next/api/core/interfaces/OrbitGlobal"},(0,i.kt)("inlineCode",{parentName:"a"},"OrbitGlobal"))),(0,i.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/orbitjs/orbit/blob/9061328a/packages/@orbit/core/src/main.ts#L30"},"packages/@orbit/core/src/main.ts:30")),(0,i.kt)("h2",{id:"functions"},"Functions"),(0,i.kt)("h3",{id:"evented"},"evented"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"evented"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"Klass"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Marks a class as evented."),(0,i.kt)("p",null,"An evented class should also implement the ",(0,i.kt)("inlineCode",{parentName:"p"},"Evented")," interface."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"import { evented, Evented } from '@orbit/core';\n\n@evented\nclass Source implements Evented {\n  ...\n}\n")),(0,i.kt)("p",null,"Listeners can then register themselves for particular events with ",(0,i.kt)("inlineCode",{parentName:"p"},"on"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"let source = new Source();\n\nfunction listener1(message: string) {\n  console.log('listener1 heard ' + message);\n};\nfunction listener2(message: string) {\n  console.log('listener2 heard ' + message);\n};\n\nsource.on('greeting', listener1);\nsource.on('greeting', listener2);\n\nevented.emit('greeting', 'hello'); // logs \"listener1 heard hello\" and\n                                   //      \"listener2 heard hello\"\n")),(0,i.kt)("p",null,"Listeners can be unregistered from events at any time with ",(0,i.kt)("inlineCode",{parentName:"p"},"off"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"source.off('greeting', listener2);\n")),(0,i.kt)("h4",{id:"parameters-1"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Klass")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Object"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Klass.prototype")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"any"))))),(0,i.kt)("h4",{id:"returns-1"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/orbitjs/orbit/blob/9061328a/packages/@orbit/core/src/evented.ts#L72"},"packages/@orbit/core/src/evented.ts:72")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"fulfillall"},"fulfillAll"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"fulfillAll"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"obj"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"eventName"),", ...",(0,i.kt)("inlineCode",{parentName:"p"},"args"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"unknown"),"[]",">"),(0,i.kt)("p",null,"Fulfills any promises returned by event listeners in parallel, using\n",(0,i.kt)("inlineCode",{parentName:"p"},"Promise.all"),"."),(0,i.kt)("p",null,"Returns an array of results (or ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined"),") returned by listeners."),(0,i.kt)("p",null,"On error, processing will stop and the returned promise will be rejected with\nthe error that was encountered."),(0,i.kt)("h4",{id:"parameters-2"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"obj")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/next/api/core/interfaces/Evented"},(0,i.kt)("inlineCode",{parentName:"a"},"Evented")))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"eventName")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"...args")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"unknown"),"[]")))),(0,i.kt)("h4",{id:"returns-2"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"unknown"),"[]",">"),(0,i.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/orbitjs/orbit/blob/9061328a/packages/@orbit/core/src/evented.ts#L180"},"packages/@orbit/core/src/evented.ts:180")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"fulfillinseries"},"fulfillInSeries"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"fulfillInSeries"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"obj"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"eventName"),", ...",(0,i.kt)("inlineCode",{parentName:"p"},"args"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"unknown"),"[]",">"),(0,i.kt)("p",null,"Fulfills any promises returned by event listeners in series."),(0,i.kt)("p",null,"Returns an array of results (or ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined"),") returned by listeners."),(0,i.kt)("p",null,"On error, processing will stop and the returned promise will be rejected with\nthe error that was encountered."),(0,i.kt)("h4",{id:"parameters-3"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"obj")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/next/api/core/interfaces/Evented"},(0,i.kt)("inlineCode",{parentName:"a"},"Evented")))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"eventName")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"...args")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"unknown"),"[]")))),(0,i.kt)("h4",{id:"returns-3"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"unknown"),"[]",">"),(0,i.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/orbitjs/orbit/blob/9061328a/packages/@orbit/core/src/evented.ts#L156"},"packages/@orbit/core/src/evented.ts:156")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"isevented"},"isEvented"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"isEvented"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"obj"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Has a class been decorated as ",(0,i.kt)("inlineCode",{parentName:"p"},"@evented"),"?"),(0,i.kt)("h4",{id:"parameters-4"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"obj")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"unknown"))))),(0,i.kt)("h4",{id:"returns-4"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/orbitjs/orbit/blob/9061328a/packages/@orbit/core/src/evented.ts#L8"},"packages/@orbit/core/src/evented.ts:8")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"settleinseries"},"settleInSeries"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"settleInSeries"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"obj"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"eventName"),", ...",(0,i.kt)("inlineCode",{parentName:"p"},"args"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"unknown"),"[]",">"),(0,i.kt)("p",null,"Settle any promises returned by event listeners in series."),(0,i.kt)("p",null,"Returns an array of results (or ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined"),") returned by listeners."),(0,i.kt)("p",null,"If any errors are encountered during processing, they will be caught and\nreturned with other results. Errors will not interrupt further processing."),(0,i.kt)("h4",{id:"parameters-5"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"obj")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/next/api/core/interfaces/Evented"},(0,i.kt)("inlineCode",{parentName:"a"},"Evented")))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"eventName")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"...args")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"unknown"),"[]")))),(0,i.kt)("h4",{id:"returns-5"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"unknown"),"[]",">"),(0,i.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/orbitjs/orbit/blob/9061328a/packages/@orbit/core/src/evented.ts#L130"},"packages/@orbit/core/src/evented.ts:130")))}m.isMDXComponent=!0}}]);