(self.webpackChunkorbit_website=self.webpackChunkorbit_website||[]).push([[3640],{3905:function(e,t,a){"use strict";a.d(t,{Zo:function(){return d},kt:function(){return k}});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),c=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),m=c(a),k=n,h=m["".concat(s,".").concat(k)]||m[k]||l[k]||o;return a?r.createElement(h,i(i({ref:t},d),{},{components:a})):r.createElement(h,i({ref:t},d))}));function k(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,i=new Array(o);i[0]=m;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:n,i[1]=p;for(var c=2;c<o;c++)i[c]=a[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},4957:function(e,t,a){"use strict";a.r(t),a.d(t,{frontMatter:function(){return p},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return d},default:function(){return m}});var r=a(2122),n=a(9756),o=(a(7294),a(3905)),i=["components"],p={id:"SyncSchemaValidationProcessor",title:"Class: SyncSchemaValidationProcessor",sidebar_label:"SyncSchemaValidationProcessor",sidebar_position:0,custom_edit_url:null},s=void 0,c={unversionedId:"api/record-cache/classes/SyncSchemaValidationProcessor",id:"api/record-cache/classes/SyncSchemaValidationProcessor",isDocsHomePage:!1,title:"Class: SyncSchemaValidationProcessor",description:"An operation processor that ensures that an operation is compatible with",source:"@site/docs/api/record-cache/classes/SyncSchemaValidationProcessor.md",sourceDirName:"api/record-cache/classes",slug:"/api/record-cache/classes/SyncSchemaValidationProcessor",permalink:"/docs/next/api/record-cache/classes/SyncSchemaValidationProcessor",editUrl:null,version:"current",sidebarPosition:0,frontMatter:{id:"SyncSchemaValidationProcessor",title:"Class: SyncSchemaValidationProcessor",sidebar_label:"SyncSchemaValidationProcessor",sidebar_position:0,custom_edit_url:null},sidebar:"api",previous:{title:"SyncSchemaConsistencyProcessor",permalink:"/docs/next/api/record-cache/classes/SyncSchemaConsistencyProcessor"},next:{title:"AsyncInverseTransformOperator",permalink:"/docs/next/api/record-cache/interfaces/AsyncInverseTransformOperator"}},d=[{value:"Hierarchy",id:"hierarchy",children:[]},{value:"Constructors",id:"constructors",children:[{value:"constructor",id:"constructor",children:[]}]},{value:"Properties",id:"properties",children:[{value:"schema",id:"schema",children:[]},{value:"validatorFor",id:"validatorfor",children:[]}]},{value:"Accessors",id:"accessors",children:[{value:"accessor",id:"accessor",children:[]}]},{value:"Methods",id:"methods",children:[{value:"after",id:"after",children:[]},{value:"before",id:"before",children:[]},{value:"finally",id:"finally",children:[]},{value:"immediate",id:"immediate",children:[]},{value:"reset",id:"reset",children:[]},{value:"upgrade",id:"upgrade",children:[]},{value:"validate",id:"validate",children:[]}]}],l={toc:d};function m(e){var t=e.components,a=(0,n.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},l,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"An operation processor that ensures that an operation is compatible with\nits associated schema."),(0,o.kt)("h2",{id:"hierarchy"},"Hierarchy"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"/docs/next/api/record-cache/classes/SyncOperationProcessor"},(0,o.kt)("inlineCode",{parentName:"a"},"SyncOperationProcessor"))),(0,o.kt)("p",{parentName:"li"},"\u21b3 ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"strong"},"SyncSchemaValidationProcessor"))))),(0,o.kt)("h2",{id:"constructors"},"Constructors"),(0,o.kt)("h3",{id:"constructor"},"constructor"),(0,o.kt)("p",null,"\u2022 ",(0,o.kt)("strong",{parentName:"p"},"new SyncSchemaValidationProcessor"),"(",(0,o.kt)("inlineCode",{parentName:"p"},"accessor"),")"),(0,o.kt)("h4",{id:"parameters"},"Parameters"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"accessor")),(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("a",{parentName:"td",href:"/docs/next/api/record-cache/interfaces/SyncRecordAccessor"},(0,o.kt)("inlineCode",{parentName:"a"},"SyncRecordAccessor")))))),(0,o.kt)("h4",{id:"overrides"},"Overrides"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/next/api/record-cache/classes/SyncOperationProcessor"},"SyncOperationProcessor"),".",(0,o.kt)("a",{parentName:"p",href:"/docs/next/api/record-cache/classes/SyncOperationProcessor#constructor"},"constructor")),(0,o.kt)("h4",{id:"defined-in"},"Defined in"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/orbitjs/orbit/blob/14519a7b/packages/@orbit/record-cache/src/operation-processors/sync-schema-validation-processor.ts#L22"},"record-cache/src/operation-processors/sync-schema-validation-processor.ts:22")),(0,o.kt)("h2",{id:"properties"},"Properties"),(0,o.kt)("h3",{id:"schema"},"schema"),(0,o.kt)("p",null,"\u2022 ",(0,o.kt)("strong",{parentName:"p"},"schema"),": ",(0,o.kt)("inlineCode",{parentName:"p"},"RecordSchema")),(0,o.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/orbitjs/orbit/blob/14519a7b/packages/@orbit/record-cache/src/operation-processors/sync-schema-validation-processor.ts#L19"},"record-cache/src/operation-processors/sync-schema-validation-processor.ts:19")),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"validatorfor"},"validatorFor"),(0,o.kt)("p",null,"\u2022 ",(0,o.kt)("strong",{parentName:"p"},"validatorFor"),": ",(0,o.kt)("inlineCode",{parentName:"p"},"ValidatorForFn"),"<",(0,o.kt)("inlineCode",{parentName:"p"},"Validator"),"<",(0,o.kt)("inlineCode",{parentName:"p"},"unknown"),"[], ",(0,o.kt)("inlineCode",{parentName:"p"},"ArrayValidationOptions"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"ArrayValidationIssue"),">"," ","|"," ",(0,o.kt)("inlineCode",{parentName:"p"},"Validator"),"<",(0,o.kt)("inlineCode",{parentName:"p"},"boolean"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"undefined"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"TypeIssue"),">"," ","|"," ",(0,o.kt)("inlineCode",{parentName:"p"},"Validator"),"<",(0,o.kt)("inlineCode",{parentName:"p"},"Date"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"DateValidationOptions"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"DateValidationIssue"),">"," ","|"," ",(0,o.kt)("inlineCode",{parentName:"p"},"Validator"),"<",(0,o.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"NumberValidationOptions"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"NumberValidationIssue"),">"," ","|"," ",(0,o.kt)("inlineCode",{parentName:"p"},"Validator"),"<",(0,o.kt)("inlineCode",{parentName:"p"},"unknown"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"ValidationOptions"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"TypeIssue"),">"," ","|"," ",(0,o.kt)("inlineCode",{parentName:"p"},"Validator"),"<",(0,o.kt)("inlineCode",{parentName:"p"},"string"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"StringValidationOptions"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"StringValidationIssue"),">"," ","|"," ",(0,o.kt)("inlineCode",{parentName:"p"},"Validator"),"<",(0,o.kt)("inlineCode",{parentName:"p"},"InitializedRecord"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"RecordValidationOptions"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"RecordValidationIssue"),">"," ","|"," ",(0,o.kt)("inlineCode",{parentName:"p"},"Validator"),"<",(0,o.kt)("inlineCode",{parentName:"p"},"RecordAttributeInput"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"RecordAttributeValidationOptions"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"RecordAttributeValidationIssue"),">"," ","|"," ",(0,o.kt)("inlineCode",{parentName:"p"},"Validator"),"<",(0,o.kt)("inlineCode",{parentName:"p"},"RecordIdentity"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"RecordIdentityValidationOptions"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"RecordIdentityValidationIssue"),">"," ","|"," ",(0,o.kt)("inlineCode",{parentName:"p"},"Validator"),"<",(0,o.kt)("inlineCode",{parentName:"p"},"RecordKeyInput"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"RecordKeyValidationOptions"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"RecordKeyValidationIssue"),">"," ","|"," ",(0,o.kt)("inlineCode",{parentName:"p"},"Validator"),"<",(0,o.kt)("inlineCode",{parentName:"p"},"RecordOperation"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"RecordOperationValidationOptions"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"RecordOperationValidationIssue"),">"," ","|"," ",(0,o.kt)("inlineCode",{parentName:"p"},"Validator"),"<",(0,o.kt)("inlineCode",{parentName:"p"},"RecordQueryExpression"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"RecordQueryExpressionValidationOptions"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"RecordQueryExpressionValidationIssue"),">"," ","|"," ",(0,o.kt)("inlineCode",{parentName:"p"},"Validator"),"<",(0,o.kt)("inlineCode",{parentName:"p"},"RecordRelationshipInput"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"RecordRelationshipValidationOptions"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"RecordRelationshipValidationIssue"),">"," ","|"," ",(0,o.kt)("inlineCode",{parentName:"p"},"Validator"),"<",(0,o.kt)("inlineCode",{parentName:"p"},"string"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"RecordTypeValidationOptions"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"RecordTypeValidationIssue"),">"," ","|"," ",(0,o.kt)("inlineCode",{parentName:"p"},"Validator"),"<",(0,o.kt)("inlineCode",{parentName:"p"},"RelatedRecordInput"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"RelatedRecordValidationOptions"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"RelatedRecordValidationIssue"),">"," ","|"," ",(0,o.kt)("inlineCode",{parentName:"p"},"Validator"),"<",(0,o.kt)("inlineCode",{parentName:"p"},"RecordFieldDefinitionInput"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"RecordFieldDefinitionValidationOptions"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"RecordFieldDefinitionIssue"),">",">"),(0,o.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/orbitjs/orbit/blob/14519a7b/packages/@orbit/record-cache/src/operation-processors/sync-schema-validation-processor.ts#L20"},"record-cache/src/operation-processors/sync-schema-validation-processor.ts:20")),(0,o.kt)("h2",{id:"accessors"},"Accessors"),(0,o.kt)("h3",{id:"accessor"},"accessor"),(0,o.kt)("p",null,"\u2022 ",(0,o.kt)("inlineCode",{parentName:"p"},"get")," ",(0,o.kt)("strong",{parentName:"p"},"accessor"),"(): ",(0,o.kt)("a",{parentName:"p",href:"/docs/next/api/record-cache/interfaces/SyncRecordAccessor"},(0,o.kt)("inlineCode",{parentName:"a"},"SyncRecordAccessor"))),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"SyncRecordAccessor")," that is monitored."),(0,o.kt)("h4",{id:"returns"},"Returns"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/next/api/record-cache/interfaces/SyncRecordAccessor"},(0,o.kt)("inlineCode",{parentName:"a"},"SyncRecordAccessor"))),(0,o.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/orbitjs/orbit/blob/14519a7b/packages/@orbit/record-cache/src/sync-operation-processor.ts#L23"},"record-cache/src/sync-operation-processor.ts:23")),(0,o.kt)("h2",{id:"methods"},"Methods"),(0,o.kt)("h3",{id:"after"},"after"),(0,o.kt)("p",null,"\u25b8 ",(0,o.kt)("strong",{parentName:"p"},"after"),"(",(0,o.kt)("inlineCode",{parentName:"p"},"operation"),"): ",(0,o.kt)("inlineCode",{parentName:"p"},"RecordOperation"),"[]"),(0,o.kt)("p",null,"Called before an ",(0,o.kt)("inlineCode",{parentName:"p"},"operation")," has been applied."),(0,o.kt)("p",null,"Returns an array of operations to be applied ",(0,o.kt)("strong",{parentName:"p"},"AFTER")," the ",(0,o.kt)("inlineCode",{parentName:"p"},"operation"),"\nhas been applied successfully."),(0,o.kt)("h4",{id:"parameters-1"},"Parameters"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"operation")),(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"RecordOperation"))))),(0,o.kt)("h4",{id:"returns-1"},"Returns"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"RecordOperation"),"[]"),(0,o.kt)("h4",{id:"inherited-from"},"Inherited from"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/next/api/record-cache/classes/SyncOperationProcessor"},"SyncOperationProcessor"),".",(0,o.kt)("a",{parentName:"p",href:"/docs/next/api/record-cache/classes/SyncOperationProcessor#after"},"after")),(0,o.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/orbitjs/orbit/blob/14519a7b/packages/@orbit/record-cache/src/sync-operation-processor.ts#L64"},"record-cache/src/sync-operation-processor.ts:64")),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"before"},"before"),(0,o.kt)("p",null,"\u25b8 ",(0,o.kt)("strong",{parentName:"p"},"before"),"(",(0,o.kt)("inlineCode",{parentName:"p"},"operation"),"): ",(0,o.kt)("inlineCode",{parentName:"p"},"RecordOperation"),"[]"),(0,o.kt)("p",null,"Called before an ",(0,o.kt)("inlineCode",{parentName:"p"},"operation")," has been applied."),(0,o.kt)("p",null,"Returns an array of operations to be applied ",(0,o.kt)("strong",{parentName:"p"},"BEFORE")," the ",(0,o.kt)("inlineCode",{parentName:"p"},"operation"),"\nitself is applied."),(0,o.kt)("h4",{id:"parameters-2"},"Parameters"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"operation")),(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"RecordOperation"))))),(0,o.kt)("h4",{id:"returns-2"},"Returns"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"RecordOperation"),"[]"),(0,o.kt)("h4",{id:"inherited-from-1"},"Inherited from"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/next/api/record-cache/classes/SyncOperationProcessor"},"SyncOperationProcessor"),".",(0,o.kt)("a",{parentName:"p",href:"/docs/next/api/record-cache/classes/SyncOperationProcessor#before"},"before")),(0,o.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/orbitjs/orbit/blob/14519a7b/packages/@orbit/record-cache/src/sync-operation-processor.ts#L54"},"record-cache/src/sync-operation-processor.ts:54")),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"finally"},"finally"),(0,o.kt)("p",null,"\u25b8 ",(0,o.kt)("strong",{parentName:"p"},"finally"),"(",(0,o.kt)("inlineCode",{parentName:"p"},"operation"),"): ",(0,o.kt)("inlineCode",{parentName:"p"},"RecordOperation"),"[]"),(0,o.kt)("p",null,"Called after an ",(0,o.kt)("inlineCode",{parentName:"p"},"operation")," ",(0,o.kt)("em",{parentName:"p"},"and")," any related operations have been applied."),(0,o.kt)("p",null,"Returns an array of operations to be applied ",(0,o.kt)("strong",{parentName:"p"},"AFTER")," the ",(0,o.kt)("inlineCode",{parentName:"p"},"operation"),"\nitself and any operations returned from the ",(0,o.kt)("inlineCode",{parentName:"p"},"after")," hook have been applied."),(0,o.kt)("h4",{id:"parameters-3"},"Parameters"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"operation")),(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"RecordOperation"))))),(0,o.kt)("h4",{id:"returns-3"},"Returns"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"RecordOperation"),"[]"),(0,o.kt)("h4",{id:"inherited-from-2"},"Inherited from"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/next/api/record-cache/classes/SyncOperationProcessor"},"SyncOperationProcessor"),".",(0,o.kt)("a",{parentName:"p",href:"/docs/next/api/record-cache/classes/SyncOperationProcessor#finally"},"finally")),(0,o.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/orbitjs/orbit/blob/14519a7b/packages/@orbit/record-cache/src/sync-operation-processor.ts#L83"},"record-cache/src/sync-operation-processor.ts:83")),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"immediate"},"immediate"),(0,o.kt)("p",null,"\u25b8 ",(0,o.kt)("strong",{parentName:"p"},"immediate"),"(",(0,o.kt)("inlineCode",{parentName:"p"},"operation"),"): ",(0,o.kt)("inlineCode",{parentName:"p"},"void")),(0,o.kt)("p",null,"Called immediately after an ",(0,o.kt)("inlineCode",{parentName:"p"},"operation")," has been applied and before the\n",(0,o.kt)("inlineCode",{parentName:"p"},"patch")," event has been emitted (i.e. before any listeners have been\nnotified that the operation was applied)."),(0,o.kt)("p",null,"No operations may be returned."),(0,o.kt)("h4",{id:"parameters-4"},"Parameters"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"operation")),(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"RecordOperation"))))),(0,o.kt)("h4",{id:"returns-4"},"Returns"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"void")),(0,o.kt)("h4",{id:"inherited-from-3"},"Inherited from"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/next/api/record-cache/classes/SyncOperationProcessor"},"SyncOperationProcessor"),".",(0,o.kt)("a",{parentName:"p",href:"/docs/next/api/record-cache/classes/SyncOperationProcessor#immediate"},"immediate")),(0,o.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/orbitjs/orbit/blob/14519a7b/packages/@orbit/record-cache/src/sync-operation-processor.ts#L75"},"record-cache/src/sync-operation-processor.ts:75")),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"reset"},"reset"),(0,o.kt)("p",null,"\u25b8 ",(0,o.kt)("strong",{parentName:"p"},"reset"),"(",(0,o.kt)("inlineCode",{parentName:"p"},"base?"),"): ",(0,o.kt)("inlineCode",{parentName:"p"},"void")),(0,o.kt)("p",null,"Called when all the data in a cache has been reset."),(0,o.kt)("p",null,"If ",(0,o.kt)("inlineCode",{parentName:"p"},"base")," is included, the cache is being reset to match a base cache."),(0,o.kt)("h4",{id:"parameters-5"},"Parameters"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"base?")),(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("a",{parentName:"td",href:"/docs/next/api/record-cache/interfaces/SyncRecordAccessor"},(0,o.kt)("inlineCode",{parentName:"a"},"SyncRecordAccessor")))))),(0,o.kt)("h4",{id:"returns-5"},"Returns"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"void")),(0,o.kt)("h4",{id:"inherited-from-4"},"Inherited from"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/next/api/record-cache/classes/SyncOperationProcessor"},"SyncOperationProcessor"),".",(0,o.kt)("a",{parentName:"p",href:"/docs/next/api/record-cache/classes/SyncOperationProcessor#reset"},"reset")),(0,o.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/orbitjs/orbit/blob/14519a7b/packages/@orbit/record-cache/src/sync-operation-processor.ts#L36"},"record-cache/src/sync-operation-processor.ts:36")),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"upgrade"},"upgrade"),(0,o.kt)("p",null,"\u25b8 ",(0,o.kt)("strong",{parentName:"p"},"upgrade"),"(): ",(0,o.kt)("inlineCode",{parentName:"p"},"void")),(0,o.kt)("p",null,"Allow the processor to perform an upgrade as part of a cache upgrade."),(0,o.kt)("h4",{id:"returns-6"},"Returns"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"void")),(0,o.kt)("h4",{id:"inherited-from-5"},"Inherited from"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/next/api/record-cache/classes/SyncOperationProcessor"},"SyncOperationProcessor"),".",(0,o.kt)("a",{parentName:"p",href:"/docs/next/api/record-cache/classes/SyncOperationProcessor#upgrade"},"upgrade")),(0,o.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/orbitjs/orbit/blob/14519a7b/packages/@orbit/record-cache/src/sync-operation-processor.ts#L41"},"record-cache/src/sync-operation-processor.ts:41")),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"validate"},"validate"),(0,o.kt)("p",null,"\u25b8 ",(0,o.kt)("strong",{parentName:"p"},"validate"),"(",(0,o.kt)("inlineCode",{parentName:"p"},"operation"),"): ",(0,o.kt)("inlineCode",{parentName:"p"},"void")),(0,o.kt)("p",null,"Validates an operation before processing it."),(0,o.kt)("h4",{id:"parameters-6"},"Parameters"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"operation")),(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"RecordOperation"))))),(0,o.kt)("h4",{id:"returns-7"},"Returns"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"void")),(0,o.kt)("h4",{id:"overrides-1"},"Overrides"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/next/api/record-cache/classes/SyncOperationProcessor"},"SyncOperationProcessor"),".",(0,o.kt)("a",{parentName:"p",href:"/docs/next/api/record-cache/classes/SyncOperationProcessor#validate"},"validate")),(0,o.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/orbitjs/orbit/blob/14519a7b/packages/@orbit/record-cache/src/operation-processors/sync-schema-validation-processor.ts#L37"},"record-cache/src/operation-processors/sync-schema-validation-processor.ts:37")))}m.isMDXComponent=!0}}]);