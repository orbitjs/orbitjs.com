"use strict";(self.webpackChunkorbit_website=self.webpackChunkorbit_website||[]).push([[7597],{3905:function(e,t,a){a.d(t,{Zo:function(){return c},kt:function(){return m}});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=r.createContext({}),l=function(e){var t=r.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=l(a),m=n,f=u["".concat(p,".").concat(m)]||u[m]||d[m]||i;return a?r.createElement(f,o(o({ref:t},c),{},{components:a})):r.createElement(f,o({ref:t},c))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,o=new Array(i);o[0]=u;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:n,o[1]=s;for(var l=2;l<i;l++)o[l]=a[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},7926:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return s},contentTitle:function(){return p},metadata:function(){return l},toc:function(){return c},default:function(){return u}});var r=a(3117),n=a(102),i=(a(7294),a(3905)),o=["components"],s={id:"index",title:"Orbit.js API Reference",slug:"/api",sidebar_label:"Summary",sidebar_position:.5,custom_edit_url:null},p=void 0,l={unversionedId:"api/index",id:"api/index",title:"Orbit.js API Reference",description:"Orbit is distributed on npm through the",source:"@site/docs/api/index.md",sourceDirName:"api",slug:"/api",permalink:"/docs/api",editUrl:null,tags:[],version:"current",sidebarPosition:.5,frontMatter:{id:"index",title:"Orbit.js API Reference",slug:"/api",sidebar_label:"Summary",sidebar_position:.5,custom_edit_url:null},sidebar:"api",next:{title:"Readme",permalink:"/docs/api/coordinator/"}},c=[{value:"Core libraries",id:"core-libraries",children:[],level:2},{value:"Record-specific data sources",id:"record-specific-data-sources",children:[],level:2},{value:"Persistence buckets",id:"persistence-buckets",children:[],level:2},{value:"Additional libraries",id:"additional-libraries",children:[],level:2}],d={toc:c};function u(e){var t=e.components,a=(0,n.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Orbit is distributed on npm through the\n",(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.com/org/orbit"},"@orbit")," organization in several packages.\nThis API reference is organized according to these packages."),(0,i.kt)("h2",{id:"core-libraries"},"Core libraries"),(0,i.kt)("p",null,"Orbit consists of the following core libraries:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"/docs/api/core/"},"@orbit/core")," - A core\nset of primitives for performing, tracking, and responding to asynchronous\ntasks, including:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"An event system that allows listeners to engage with the fulfillment of\nevents by returning promises.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"An asynchronous task processing queue.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"A log that tracks a history of changes and allows for revision and\ninterrogation.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"A bucket interface for persisting state. Used by logs and queues.")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"/docs/api/data/"},"@orbit/data")," - Applies the core Orbit primitives to data\nsources. Includes the following:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"/docs/api/data/classes/Source"},(0,i.kt)("inlineCode",{parentName:"a"},"Source"))," - a base class that can be used to\nabstract any source of data. Sources can be decorated as\n",(0,i.kt)("a",{parentName:"p",href:"/docs/api/data/interfaces/Queryable"},(0,i.kt)("inlineCode",{parentName:"a"},"@queryable")),",\n",(0,i.kt)("a",{parentName:"p",href:"/docs/api/data/interfaces/Updatable"},(0,i.kt)("inlineCode",{parentName:"a"},"@updatable")),", and/or\n",(0,i.kt)("a",{parentName:"p",href:"/docs/api/data/interfaces/Syncable"},(0,i.kt)("inlineCode",{parentName:"a"},"@syncable")),".")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"/docs/api/data/interfaces/Transform"},(0,i.kt)("inlineCode",{parentName:"a"},"Transform"))," - composed of any number of\n",(0,i.kt)("a",{parentName:"p",href:"/docs/api/data/interfaces/Operation"},(0,i.kt)("inlineCode",{parentName:"a"},"Operation")),"s, a transform represents a set\nof mutations to be applied transactionally.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"/docs/api/data/interfaces/Query"},(0,i.kt)("inlineCode",{parentName:"a"},"Query"))," - composed of one or more\n",(0,i.kt)("a",{parentName:"p",href:"/docs/api/data/interfaces/QueryExpression"},(0,i.kt)("inlineCode",{parentName:"a"},"QueryExpression")),"s, a query\nrepresents a request for data.")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"/docs/api/records/"},"@orbit/records")," - Extends the general data concepts from\n",(0,i.kt)("a",{parentName:"p",href:"/docs/api/data/"},"@orbit/data")," to make record-specific classes and interfaces.\nThese include:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"RecordSource")," - a base class that extends ",(0,i.kt)("inlineCode",{parentName:"p"},"Source"),".")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"RecordSchema")," - define models, including attributes and\nrelationships.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Operations that are specific to records (e.g. ",(0,i.kt)("inlineCode",{parentName:"p"},"addRecord"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"removeRecord"),",\n",(0,i.kt)("inlineCode",{parentName:"p"},"addToHasMany"),", etc.).")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Query expressions that are specific to records (e.g. ",(0,i.kt)("inlineCode",{parentName:"p"},"findRecord"),",\n",(0,i.kt)("inlineCode",{parentName:"p"},"findRecords"),", etc.).")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Tranform and query builders that use chainable terms to create operations\nand expressions.")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"/docs/api/record-cache/"},"@orbit/record-cache")," - Everything you need to build\nyour own caches that hold data records (useful within record-specific\nsources).")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"/docs/api/coordinator/"},"@orbit/coordinator")," -\nA coordinator and set of coordination strategies for managing data flow and\nkeeping Orbit Data sources in sync.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"/docs/api/serializers/"},"@orbit/serializers")," - A base set of serializers for\nserializing / deserializing data types.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"/docs/api/validators/"},"@orbit/validators")," - A set of validators for\nvalidating primitive data and utilities for building higher order validators.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"/docs/api/identity-map/"},"@orbit/identity-map")," - A simple identity map to\nmanage model instances.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"/docs/api/immutable/"},"@orbit/immutable")," - A lightweight library of immutable\ndata structures.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"/docs/api/utils/"},"@orbit/utils")," - A common set of utility functions used by\nOrbit libs."))),(0,i.kt)("h2",{id:"record-specific-data-sources"},"Record-specific data sources"),(0,i.kt)("p",null,"All of the following sources are based on ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/records/"},"@orbit/records"),".\nThey provide uniform interfaces to query and mutate record-specific data:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"/docs/api/memory/"},"@orbit/memory")," - An in-memory data source that supports\ncomplex querying and updating. Because memory sources maintain data in\nimmutable data structures, they can be efficiently forked. Forked memory\nsources can diverge from the master memory source, and then the changes can be\nmerged later.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"/docs/api/jsonapi/"},"@orbit/jsonapi")," - Provides full CRUD support, including\ncomplex querying, for a RESTful API that conforms to the\n",(0,i.kt)("a",{parentName:"p",href:"http://jsonapi.org/"},"JSON:API")," specification.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"/docs/api/local-storage/"},"@orbit/local-storage")," - Persists records to local\nstorage.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"/docs/api/indexeddb/"},"@orbit/indexeddb")," - Persists records to IndexedDB."))),(0,i.kt)("p",null,"These standard sources can provide guidance for building your own custom sources\nas well."),(0,i.kt)("h2",{id:"persistence-buckets"},"Persistence buckets"),(0,i.kt)("p",null,"Buckets are used to persist application state, such as queued requests and\nchange logs. Standard buckets include:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"/docs/api/local-storage-bucket/"},"@orbit/local-storage-bucket")," - Persists\nstate to local storage.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"/docs/api/indexeddb-bucket/"},"@orbit/indexeddb-bucket")," - Persists state to\nIndexedDB."))),(0,i.kt)("h2",{id:"additional-libraries"},"Additional libraries"),(0,i.kt)("p",null,"Some additional libraries related to Orbit, but not covered by these docs,\ninclude:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/orbitjs/ember-orbit"},"ember-orbit")," - An Ember.js data\nlayer heavily inspired by Ember Data.")))}u.isMDXComponent=!0}}]);