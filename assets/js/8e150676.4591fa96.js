(self.webpackChunkorbit_website=self.webpackChunkorbit_website||[]).push([[7449],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return c},kt:function(){return d}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var u=r.createContext({}),p=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(u.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,u=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),m=p(n),d=i,b=m["".concat(u,".").concat(d)]||m[d]||s[d]||a;return n?r.createElement(b,l(l({ref:t},c),{},{components:n})):r.createElement(b,l({ref:t},c))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,l=new Array(a);l[0]=m;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var p=2;p<a;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3258:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return u},metadata:function(){return p},toc:function(){return c},default:function(){return m}});var r=n(2122),i=n(9756),a=(n(7294),n(3905)),l=["components"],o={id:"index",title:"@orbit/immutable",slug:"/api/immutable",sidebar_label:"Readme",sidebar_position:0,custom_edit_url:null},u="@orbit/immutable",p={unversionedId:"api/immutable/index",id:"api/immutable/index",isDocsHomePage:!1,title:"@orbit/immutable",description:"A lightweight library of immutable data structures, including:",source:"@site/docs/api/immutable/index.md",sourceDirName:"api/immutable",slug:"/api/immutable",permalink:"/docs/next/api/immutable",editUrl:null,version:"current",sidebarPosition:0,frontMatter:{id:"index",title:"@orbit/immutable",slug:"/api/immutable",sidebar_label:"Readme",sidebar_position:0,custom_edit_url:null},sidebar:"api",previous:{title:"IdentitySerializer",permalink:"/docs/next/api/identity-map/interfaces/IdentitySerializer"},next:{title:"Exports",permalink:"/docs/next/api/immutable/modules"}},c=[{value:"Installation",id:"installation",children:[]},{value:"Contributing",id:"contributing",children:[{value:"Installation",id:"installation-1",children:[]},{value:"Building",id:"building",children:[]},{value:"Testing",id:"testing",children:[]}]},{value:"License",id:"license",children:[]}],s={toc:c};function m(e){var t=e.components,n=(0,i.Z)(e,l);return(0,a.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"orbitimmutable"},"@orbit/immutable"),(0,a.kt)("p",null,"A lightweight library of immutable data structures, including:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"ImmutableMap")),(0,a.kt)("li",{parentName:"ul"},"More to come?")),(0,a.kt)("p",null,"Internally, this library relies upon a modernized version of Matt Bierner's\n",(0,a.kt)("a",{parentName:"p",href:"https://github.com/mattbierner/hamt"},"HAMT"),"."),(0,a.kt)("h3",{id:"installation"},"Installation"),(0,a.kt)("p",null,"Install with yarn:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"yarn add @orbit/immutable\n")),(0,a.kt)("p",null,"Or with npm:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"npm install @orbit/immutable\n")),(0,a.kt)("h2",{id:"contributing"},"Contributing"),(0,a.kt)("h3",{id:"installation-1"},"Installation"),(0,a.kt)("p",null,"To install dependencies:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"yarn install\n")),(0,a.kt)("h3",{id:"building"},"Building"),(0,a.kt)("p",null,"Distributions can be built to the ",(0,a.kt)("inlineCode",{parentName:"p"},"/dist")," directory by running:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"yarn build\n")),(0,a.kt)("h3",{id:"testing"},"Testing"),(0,a.kt)("h4",{id:"ci-testing"},"CI Testing"),(0,a.kt)("p",null,"Test in CI mode by running:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"yarn test\n")),(0,a.kt)("h4",{id:"browser-testing"},"Browser Testing"),(0,a.kt)("p",null,"Test within a browser\n(at ",(0,a.kt)("a",{parentName:"p",href:"http://localhost:8080/"},"http://localhost:8080/"),") by running:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"yarn start\n")),(0,a.kt)("h2",{id:"license"},"License"),(0,a.kt)("p",null,"Copyright 2014-2020 Cerebris Corporation. MIT License (see LICENSE for details)."))}m.isMDXComponent=!0}}]);