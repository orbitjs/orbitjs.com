"use strict";(self.webpackChunkorbit_website=self.webpackChunkorbit_website||[]).push([[374],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return b}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),p=s(n),b=i,h=p["".concat(l,".").concat(b)]||p[b]||u[b]||a;return n?r.createElement(h,o(o({ref:t},d),{},{components:n})):r.createElement(h,o({ref:t},d))}));function b(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=p;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:i,o[1]=c;for(var s=2;s<a;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},8988:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return d},default:function(){return p}});var r=n(3117),i=n(102),a=(n(7294),n(3905)),o=["components"],c={id:"index",title:"@orbit/record-cache",slug:"/api/record-cache/",sidebar_label:"Readme",sidebar_position:0,custom_edit_url:null},l="@orbit/record-cache",s={unversionedId:"api/record-cache/index",id:"api/record-cache/index",title:"@orbit/record-cache",description:"A record cache is an abstraction used to access and maintain a set of records.",source:"@site/docs/api/record-cache/index.md",sourceDirName:"api/record-cache",slug:"/api/record-cache/",permalink:"/docs/api/record-cache/",editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"index",title:"@orbit/record-cache",slug:"/api/record-cache/",sidebar_label:"Readme",sidebar_position:0,custom_edit_url:null},sidebar:"api",previous:{title:"MemorySourceSettings",permalink:"/docs/api/memory/interfaces/MemorySourceSettings"},next:{title:"Exports",permalink:"/docs/api/record-cache/modules"}},d=[{value:"Installation",id:"installation",children:[],level:2},{value:"Contributing",id:"contributing",children:[{value:"Installation",id:"installation-1",children:[],level:3},{value:"Building",id:"building",children:[],level:3},{value:"Testing",id:"testing",children:[{value:"CI Testing",id:"ci-testing",children:[],level:4},{value:"Browser Testing",id:"browser-testing",children:[],level:4}],level:3}],level:2},{value:"License",id:"license",children:[],level:2}],u={toc:d};function p(e){var t=e.components,n=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"orbitrecord-cache"},"@orbit/record-cache"),(0,a.kt)("p",null,"A record cache is an abstraction used to access and maintain a set of records."),(0,a.kt)("p",null,"Record caches should extend one of the following base classes:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"SyncRecordCache")," - when records can be accessed synchronously")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"AsyncRecordCache")," - when records must be accessed asynchronously"))),(0,a.kt)("h2",{id:"installation"},"Installation"),(0,a.kt)("p",null,"Install with yarn:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"yarn add @orbit/record-cache\n")),(0,a.kt)("p",null,"Or with npm:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"npm install @orbit/record-cache\n")),(0,a.kt)("h2",{id:"contributing"},"Contributing"),(0,a.kt)("h3",{id:"installation-1"},"Installation"),(0,a.kt)("p",null,"To install dependencies:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"yarn install\n")),(0,a.kt)("h3",{id:"building"},"Building"),(0,a.kt)("p",null,"Distributions can be built to the ",(0,a.kt)("inlineCode",{parentName:"p"},"/dist")," directory by running:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"yarn build\n")),(0,a.kt)("h3",{id:"testing"},"Testing"),(0,a.kt)("h4",{id:"ci-testing"},"CI Testing"),(0,a.kt)("p",null,"Test in CI mode by running:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"yarn test\n")),(0,a.kt)("h4",{id:"browser-testing"},"Browser Testing"),(0,a.kt)("p",null,"Test within a browser\n(at ",(0,a.kt)("a",{parentName:"p",href:"http://localhost:8080/"},"http://localhost:8080/"),") by running:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"yarn start\n")),(0,a.kt)("h2",{id:"license"},"License"),(0,a.kt)("p",null,"Copyright 2014-2021 Cerebris Corporation. MIT License (see LICENSE for details)."))}p.isMDXComponent=!0}}]);