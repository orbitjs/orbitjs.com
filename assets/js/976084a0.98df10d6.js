"use strict";(self.webpackChunkorbit_website=self.webpackChunkorbit_website||[]).push([[3575],{3905:function(e,t,n){n.d(t,{Zo:function(){return o},kt:function(){return u}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=r.createContext({}),p=function(e){var t=r.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},o=function(e){var t=p(e.components);return r.createElement(d.Provider,{value:t},e.children)},k={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,d=e.parentName,o=s(e,["components","mdxType","originalType","parentName"]),m=p(n),u=a,c=m["".concat(d,".").concat(u)]||m[u]||k[u]||l;return n?r.createElement(c,i(i({ref:t},o),{},{components:n})):r.createElement(c,i({ref:t},o))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,i=new Array(l);i[0]=m;var s={};for(var d in t)hasOwnProperty.call(t,d)&&(s[d]=t[d]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var p=2;p<l;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3349:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return d},metadata:function(){return p},toc:function(){return o},default:function(){return m}});var r=n(3117),a=n(102),l=(n(7294),n(3905)),i=["components"],s={id:"modules",title:"@orbit/core",sidebar_label:"Exports",sidebar_position:.5,custom_edit_url:null},d=void 0,p={unversionedId:"api/core/modules",id:"api/core/modules",title:"@orbit/core",description:"Classes",source:"@site/docs/api/core/modules.md",sourceDirName:"api/core",slug:"/api/core/modules",permalink:"/docs/api/core/modules",editUrl:null,tags:[],version:"current",sidebarPosition:.5,frontMatter:{id:"modules",title:"@orbit/core",sidebar_label:"Exports",sidebar_position:.5,custom_edit_url:null},sidebar:"api",previous:{title:"Readme",permalink:"/docs/api/core/"},next:{title:"Assertion",permalink:"/docs/api/core/classes/Assertion"}},o=[{value:"Classes",id:"classes",children:[],level:2},{value:"Interfaces",id:"interfaces",children:[],level:2},{value:"References",id:"references",children:[{value:"default",id:"default",children:[],level:3}],level:2},{value:"Type aliases",id:"type-aliases",children:[{value:"Listener",id:"listener",children:[{value:"Type declaration",id:"type-declaration",children:[{value:"Parameters",id:"parameters",children:[],level:5},{value:"Returns",id:"returns",children:[],level:5}],level:4},{value:"Defined in",id:"defined-in",children:[],level:4}],level:3}],level:2},{value:"Variables",id:"variables",children:[{value:"Orbit",id:"orbit",children:[{value:"Defined in",id:"defined-in-1",children:[],level:4}],level:3}],level:2},{value:"Functions",id:"functions",children:[{value:"evented",id:"evented",children:[{value:"Parameters",id:"parameters-1",children:[],level:4},{value:"Returns",id:"returns-1",children:[],level:4},{value:"Defined in",id:"defined-in-2",children:[],level:4}],level:3},{value:"fulfillAll",id:"fulfillall",children:[{value:"Parameters",id:"parameters-2",children:[],level:4},{value:"Returns",id:"returns-2",children:[],level:4},{value:"Defined in",id:"defined-in-3",children:[],level:4}],level:3},{value:"fulfillInSeries",id:"fulfillinseries",children:[{value:"Parameters",id:"parameters-3",children:[],level:4},{value:"Returns",id:"returns-3",children:[],level:4},{value:"Defined in",id:"defined-in-4",children:[],level:4}],level:3},{value:"isEvented",id:"isevented",children:[{value:"Parameters",id:"parameters-4",children:[],level:4},{value:"Returns",id:"returns-4",children:[],level:4},{value:"Defined in",id:"defined-in-5",children:[],level:4}],level:3},{value:"settleInSeries",id:"settleinseries",children:[{value:"Parameters",id:"parameters-5",children:[],level:4},{value:"Returns",id:"returns-5",children:[],level:4},{value:"Defined in",id:"defined-in-6",children:[],level:4}],level:3}],level:2}],k={toc:o};function m(e){var t=e.components,n=(0,a.Z)(e,i);return(0,l.kt)("wrapper",(0,r.Z)({},k,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"classes"},"Classes"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"classes/Assertion"},"Assertion")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"classes/Bucket"},"Bucket")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"classes/Exception"},"Exception")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"classes/Log"},"Log")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"classes/NotLoggedException"},"NotLoggedException")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"classes/Notifier"},"Notifier")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"classes/OutOfRangeException"},"OutOfRangeException")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"classes/TaskProcessor"},"TaskProcessor")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"classes/TaskQueue"},"TaskQueue"))),(0,l.kt)("h2",{id:"interfaces"},"Interfaces"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"interfaces/BucketSettings"},"BucketSettings")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"interfaces/Evented"},"Evented")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"interfaces/LogOptions"},"LogOptions")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"interfaces/OrbitGlobal"},"OrbitGlobal")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"interfaces/Performer"},"Performer")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"interfaces/Task"},"Task")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"interfaces/TaskQueueSettings"},"TaskQueueSettings"))),(0,l.kt)("h2",{id:"references"},"References"),(0,l.kt)("h3",{id:"default"},"default"),(0,l.kt)("p",null,"Renames and re-exports ",(0,l.kt)("a",{parentName:"p",href:"modules#orbit"},"Orbit")),(0,l.kt)("h2",{id:"type-aliases"},"Type aliases"),(0,l.kt)("h3",{id:"listener"},"Listener"),(0,l.kt)("p",null,"\u01ac ",(0,l.kt)("strong",{parentName:"p"},"Listener"),": (...",(0,l.kt)("inlineCode",{parentName:"p"},"args"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"any"),"[]) => ",(0,l.kt)("inlineCode",{parentName:"p"},"any")),(0,l.kt)("h4",{id:"type-declaration"},"Type declaration"),(0,l.kt)("p",null,"\u25b8 (...",(0,l.kt)("inlineCode",{parentName:"p"},"args"),"): ",(0,l.kt)("inlineCode",{parentName:"p"},"any")),(0,l.kt)("h5",{id:"parameters"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"...args")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"any"),"[]")))),(0,l.kt)("h5",{id:"returns"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"any")),(0,l.kt)("h4",{id:"defined-in"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/orbitjs/orbit/blob/fd40512e/packages/@orbit/core/src/notifier.ts#L1"},"packages/@orbit/core/src/notifier.ts:1")),(0,l.kt)("h2",{id:"variables"},"Variables"),(0,l.kt)("h3",{id:"orbit"},"Orbit"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"Orbit"),": ",(0,l.kt)("a",{parentName:"p",href:"interfaces/OrbitGlobal"},(0,l.kt)("inlineCode",{parentName:"a"},"OrbitGlobal"))),(0,l.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/orbitjs/orbit/blob/fd40512e/packages/@orbit/core/src/main.ts#L35"},"packages/@orbit/core/src/main.ts:35")),(0,l.kt)("h2",{id:"functions"},"Functions"),(0,l.kt)("h3",{id:"evented"},"evented"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"evented"),"(",(0,l.kt)("inlineCode",{parentName:"p"},"Klass"),"): ",(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("p",null,"Marks a class as evented."),(0,l.kt)("p",null,"An evented class should also implement the ",(0,l.kt)("inlineCode",{parentName:"p"},"Evented")," interface."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"import { evented, Evented } from '@orbit/core';\n\n@evented\nclass Source implements Evented {\n  ...\n}\n")),(0,l.kt)("p",null,"Listeners can then register themselves for particular events with ",(0,l.kt)("inlineCode",{parentName:"p"},"on"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"let source = new Source();\n\nfunction listener1(message: string) {\n  console.log('listener1 heard ' + message);\n};\nfunction listener2(message: string) {\n  console.log('listener2 heard ' + message);\n};\n\nsource.on('greeting', listener1);\nsource.on('greeting', listener2);\n\nevented.emit('greeting', 'hello'); // logs \"listener1 heard hello\" and\n                                   //      \"listener2 heard hello\"\n")),(0,l.kt)("p",null,"Listeners can be unregistered from events at any time with ",(0,l.kt)("inlineCode",{parentName:"p"},"off"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"source.off('greeting', listener2);\n")),(0,l.kt)("h4",{id:"parameters-1"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"Klass")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"Object"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"Klass.prototype")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"any"))))),(0,l.kt)("h4",{id:"returns-1"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/orbitjs/orbit/blob/fd40512e/packages/@orbit/core/src/evented.ts#L72"},"packages/@orbit/core/src/evented.ts:72")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"fulfillall"},"fulfillAll"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"fulfillAll"),"(",(0,l.kt)("inlineCode",{parentName:"p"},"obj"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"eventName"),", ...",(0,l.kt)("inlineCode",{parentName:"p"},"args"),"): ",(0,l.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,l.kt)("inlineCode",{parentName:"p"},"unknown"),"[]",">"),(0,l.kt)("p",null,"Fulfills any promises returned by event listeners in parallel, using\n",(0,l.kt)("inlineCode",{parentName:"p"},"Promise.all"),"."),(0,l.kt)("p",null,"Returns an array of results (or ",(0,l.kt)("inlineCode",{parentName:"p"},"undefined"),") returned by listeners."),(0,l.kt)("p",null,"On error, processing will stop and the returned promise will be rejected with\nthe error that was encountered."),(0,l.kt)("h4",{id:"parameters-2"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"obj")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"interfaces/Evented"},(0,l.kt)("inlineCode",{parentName:"a"},"Evented")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"string"),">")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"eventName")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"string"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"...args")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"unknown"),"[]")))),(0,l.kt)("h4",{id:"returns-2"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,l.kt)("inlineCode",{parentName:"p"},"unknown"),"[]",">"),(0,l.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/orbitjs/orbit/blob/fd40512e/packages/@orbit/core/src/evented.ts#L180"},"packages/@orbit/core/src/evented.ts:180")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"fulfillinseries"},"fulfillInSeries"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"fulfillInSeries"),"(",(0,l.kt)("inlineCode",{parentName:"p"},"obj"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"eventName"),", ...",(0,l.kt)("inlineCode",{parentName:"p"},"args"),"): ",(0,l.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,l.kt)("inlineCode",{parentName:"p"},"unknown"),"[]",">"),(0,l.kt)("p",null,"Fulfills any promises returned by event listeners in series."),(0,l.kt)("p",null,"Returns an array of results (or ",(0,l.kt)("inlineCode",{parentName:"p"},"undefined"),") returned by listeners."),(0,l.kt)("p",null,"On error, processing will stop and the returned promise will be rejected with\nthe error that was encountered."),(0,l.kt)("h4",{id:"parameters-3"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"obj")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"interfaces/Evented"},(0,l.kt)("inlineCode",{parentName:"a"},"Evented")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"string"),">")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"eventName")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"string"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"...args")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"unknown"),"[]")))),(0,l.kt)("h4",{id:"returns-3"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,l.kt)("inlineCode",{parentName:"p"},"unknown"),"[]",">"),(0,l.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/orbitjs/orbit/blob/fd40512e/packages/@orbit/core/src/evented.ts#L156"},"packages/@orbit/core/src/evented.ts:156")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"isevented"},"isEvented"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"isEvented"),"(",(0,l.kt)("inlineCode",{parentName:"p"},"obj"),"): ",(0,l.kt)("inlineCode",{parentName:"p"},"boolean")),(0,l.kt)("p",null,"Has a class been decorated as ",(0,l.kt)("inlineCode",{parentName:"p"},"@evented"),"?"),(0,l.kt)("h4",{id:"parameters-4"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"obj")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"unknown"))))),(0,l.kt)("h4",{id:"returns-4"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"boolean")),(0,l.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/orbitjs/orbit/blob/fd40512e/packages/@orbit/core/src/evented.ts#L8"},"packages/@orbit/core/src/evented.ts:8")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"settleinseries"},"settleInSeries"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"settleInSeries"),"(",(0,l.kt)("inlineCode",{parentName:"p"},"obj"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"eventName"),", ...",(0,l.kt)("inlineCode",{parentName:"p"},"args"),"): ",(0,l.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,l.kt)("inlineCode",{parentName:"p"},"unknown"),"[]",">"),(0,l.kt)("p",null,"Settle any promises returned by event listeners in series."),(0,l.kt)("p",null,"Returns an array of results (or ",(0,l.kt)("inlineCode",{parentName:"p"},"undefined"),") returned by listeners."),(0,l.kt)("p",null,"If any errors are encountered during processing, they will be caught and\nreturned with other results. Errors will not interrupt further processing."),(0,l.kt)("h4",{id:"parameters-5"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"obj")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"interfaces/Evented"},(0,l.kt)("inlineCode",{parentName:"a"},"Evented")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"string"),">")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"eventName")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"string"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"...args")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"unknown"),"[]")))),(0,l.kt)("h4",{id:"returns-5"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,l.kt)("inlineCode",{parentName:"p"},"unknown"),"[]",">"),(0,l.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/orbitjs/orbit/blob/fd40512e/packages/@orbit/core/src/evented.ts#L130"},"packages/@orbit/core/src/evented.ts:130")))}m.isMDXComponent=!0}}]);